---
- hosts: all
  sudo: true
  environment:
    MUON_ENV: test
    MUON_CONFIG: test

  tasks:
      # Run the equivalent of "apt-get update" as a separate step
      - name: Do apt cache update
        apt: update_cache=yes cache_valid_time=3600

      #Remove old node packages
      - name: Remove wrong Node
        apt: name=node state=absent
      - name: Remove old NodeJS
        apt: name=nodejs state=absent

      - name: Remove old node command if it still exists
        command: sudo rm /usr/bin/node removes=/usr/bin/node

      #Autoremove old stuff
      - name: Check if packages need to be autoremoved
        command: apt-get --dry-run autoremove
        register: check_autoremove
        changed_when: False
      - name: Autoremove unused packages
        command: apt-get -y autoremove
        when: "'packages will be REMOVED' in check_autoremove.stdout"

      # Install required packages
      - name: Install required packages
        apt: name={{ item }} state=present
        with_items:
          - build-essential
          - wget
          - curl
          - git
          - nodejs
          - npm
          - python-pip

      #Install docker.py - allows Ansible to manage Docker containers - issues with creates
      - name: Ansible docker control
        pip:
          name: docker-py

      #Symlinks
      - name: Build symlink for node command
        file: src=/usr/bin/nodejs dest=/usr/bin/node state=link

      #Download & install Docker
      - name: Download & install Docker
        shell: wget -qO- https://get.docker.com/ | sh
        args:
          creates: /usr/bin/docker

      #Install Clojure
      - name: Install Clojure
        get_url: url=https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein dest=/home/vagrant
      - name: Change permissions
        command: chmod +x lein
      - name: Copy to destination
        command: mv lein /usr/bin/

      #Make dir for packages
      - name: Make destination folder
        file: path=/home/vagrant/muon state=directory

      #Do git checkouts
      - name: Get Microservice-ux
        git: repo=https://github.com/simplicityitself/microservice-ux.git dest=/home/vagrant/muon/microservice-ux
      - name: Get Photon
        git: repo=http://github.com/photonevents/photon.git dest=/home/vagrant/muon/photon

      #Install Muon-core
      - name: Install Muon-core via NPM
        npm:
          name: muon-core
          global: yes
          state: latest

      #Install Java
      - name: Install add-apt-repostory
        apt: name=software-properties-common state=latest

      - name: Add Oracle Java Repository
        apt_repository: repo='ppa:webupd8team/java'

      - name: Accept Java 8 Licence
        shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | tee /etc/oracle-java-8-licence-acceptance | /usr/bin/debconf-set-selections
        args:
          creates: /etc/oracle-java-8-licence-acceptance

      - name: Install Oracle Java 8
        apt: name={{item}} state=latest
        with_items:
          - oracle-java8-installer
          - ca-certificates
          - oracle-java8-set-default

      #Chown muon - using 'command' instead of 'file' to avoid -R issues
      - name: Ensure Vagrant owns everything
        command: sudo chown -R vagrant:vagrant /home/vagrant

      #Figure out IP address of Vagrant box
      - name: Trying to get IP address
        shell: 'hostname -I | grep -oE "\b(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b" | egrep -v "10.0.2.15|172.17.42.1"'
        register: host_ip

      #Update Vagrant box host file
      - name: Update /etc/hosts
        lineinfile: dest=/etc/hosts line='{{host_ip.stdout}} muonhost'

      #Build Photon
      - name: Build Photon
        shell: sudo ./build.sh
        args:
          chdir: /home/vagrant/muon/photon
          creates: app-standalone.jar

      #Build Photon in a Docker container
      - name: Dockerise Photon
        shell: sudo docker build --tag=muon/photon .
        args:
          chdir: /home/vagrant/muon/photon

      #Hack to kill current RabbitMQ if it has already started - until docker-py issues are resolved
      - name: Kill current RabbitMQ container if it exists
        docker:
          state: absent
          name: rabbit-muon
          image: rabbitmq:3.5.4-management

      #Start RabbitMQ via command line - until docker-py issues are resolved
      - name: Start RabbitMQ in docker
        shell: sudo docker run -d --hostname muonhost --name rabbit-muon -e RABBITMQ_DEFAULT_USER=muon -e RABBITMQ_DEFAULT_PASS=microservices -p 15672:15672 -p 5672:5672 rabbitmq:3.5.4-management

      #Hack to kill current Photon if it has already started - until docker-py issues are resolved
      - name: Kill current Photon container if it exists
        docker:
          state: absent
          name: photon
          image: muon/photon

      #Start Photon via command line - until docker-py issues are resolved
      - name: Start Photon
        shell:  docker run -e AMQP={{host_ip.stdout}}:5672 --add-host muonhost:{{host_ip.stdout}} --name "photon" -d "muon/photon"


      #Display info to user
      - name: Display info
        debug:
          msg: "The server is now running on {{host_ip.stdout}}. RabbitMQ admin is available on {{host_ip.stdout}}:15672."

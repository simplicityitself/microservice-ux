---

  # Do git checkouts
  - name: Git clone microservice-ux
    git: repo=https://github.com/simplicityitself/microservice-ux.git dest=/home/vagrant/muon/microservice-ux
    tags: muon-platform

  - name: git clone photon event store
    git: repo=http://github.com/photonevents/photon.git dest=/home/vagrant/muon/photon
    args:    
        force: yes
    tags: muon-platform

  # Install Muon-core
  - name: Install Muon-core via NPM
    npm: >
      name=muon-core
      global=yes
      state=latest
    tags: muon-platform
    
   

  #Build Photon
  - name: Build Photon
    shell: sudo ./build.sh
    args:
      chdir: /home/vagrant/muon/photon
      creates: app-standalone.jar
    tags: muon-platform

  #Build Photon in a Docker container
  - name: Dockerise Photon
    shell: sudo docker build --tag=muon/photon .
    args:
      chdir: /home/vagrant/muon/photon
    tags: muon-platform

  #Chown directory - using 'command' instead of 'file' to avoid -R issues
  - name: Ensure Vagrant owns everything
    command: sudo chown -R vagrant:vagrant /home/vagrant
    tags: muon-platform



  # Figure out IP address of Vagrant box
  - name: Trying to get IP address
    shell: "ifconfig docker0 | grep 'inet addr' | awk -F: '{print $2}' | awk '{print $1}'"
    register: host_ip
    tags: dev-vm


 # Update Vagrant box host file
  - name: Update /etc/hosts
    lineinfile:
      dest: /etc/hosts
      line: '{{host_ip.stdout}} {{hostname}}'
    tags: dev-vm


  # Set Environment variables
  - name: Set Muon_ENV mode
    lineinfile:
      dest: /etc/environment
      line: 'MUON_ENV={{muon_env}}'
    tags: asap
  - name: Set Muon_CONFIG mode
    lineinfile:
      dest: /etc/environment
      line: 'MUON_CONFIG={{muon_config}}'
    tags: asap
  - name: Set AMQP Server
    lineinfile:
      dest: /etc/environment
      line: 'AMQP_SERVER={{host_ip.stdout}}:{{amqp_port}}'
    tags: asap
  - name: Set AMQP url
    lineinfile:
      dest: /etc/environment
      line: 'AMQP_URL=amqp://{{amqp_user}}:{{amqp_pass}}@{{host_ip.stdout}}:{{amqp_port}}'
    tags: asap




  - name: create portal assets
    copy: src=nginx-static/ dest=/usr/share/nginx/html owner=root group=root mode=0644
    tags: nginx

  - name: create muon restart script
    copy: src=init.d/muon-platform dest=/etc/init.d/muon-platform owner=root group=root mode=0774
    tags: nginx

  - name: create muon convenience scripts
    template: src=bin/muon-platform-reset dest=/home/vagrant/muon/muon-platform-reset owner=vagrant group=vagrant mode=0774
    tags: nginx

  - name: Build symlink for muon restart
    file:
      src: /etc/init.d/muon-platform
      dest:  /etc/rc2.d/S99muon-platform
      state: link
    tags: base

  - name: Build symlink for muon restart
    file:
      src: /etc/init.d/muon-platform
      dest:  /etc/rc5.d/S99muon-platform
      state: link
    tags: base

  - name: Build symlink for muon restart
    file:
      src: /etc/init.d/muon-platform
      dest:  /etc/rc3.d/S99muon-platform
      state: link
    tags: base

  - name: Make .muon home config folder
    file:
      path: /home/vagrant/.muon
      state: directory
    tags: base

  - name: muon-core config file
    template: src=muon-core/discovery.json dest=/home/vagrant/.muon owner=vagrant group=vagrant mode=0644
    tags: base



  # Hack to kill current RabbitMQ if it has already started - until docker-py issues are resolved
  - name: Kill current RabbitMQ container if it exists
    docker:
      state: absent
      name: rabbit-muon
      image: rabbitmq:3.5.4-management
    tags: asap

  # Hack to kill current Photon if it has already started - until docker-py issues are resolved
  - name: Kill current Photon container if it exists
    docker:
      state: absent
      name: photon
      image: muon/photon
    tags: asap

  # Start RabbitMQ via command line - until docker-py issues are resolved
  - name: Start RabbitMQ in docker
    shell: sudo docker run -d --hostname muonhost --name rabbit-muon -e RABBITMQ_DEFAULT_USER={{amqp_user}} -e RABBITMQ_DEFAULT_PASS={{amqp_pass}} -p {{amqp_admin}}:{{amqp_admin}} -p {{amqp_port}}:{{amqp_port}} rabbitmq:3.5.4-management
    tags: asap

  # Start Photon via command line - until docker-py issues are resolved
  - name: Start Photon
    shell:  docker run -e AMQP={{host_ip.stdout}}:{{amqp_port}} --add-host muonhost:{{host_ip.stdout}} --name "photon" -d -p 3000:3000 "muon/photon"
    tags: asap


  - name: Display Instructions
    debug:
      msg: "***** Your platform is served! Point your broswer to: http://localhost:8080/ *****"
    tags: motd









